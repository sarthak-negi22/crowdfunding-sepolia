import { Signer, ContractFactory, PayableOverrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Deployer, DeployerInterface, IDeployer } from "../Deployer";
type DeployerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class Deployer__factory extends ContractFactory {
    constructor(...args: DeployerConstructorParams);
    deploy(transactions: IDeployer.TransactionStruct[], overrides?: PayableOverrides & {
        from?: string | Promise<string>;
    }): Promise<Deployer>;
    getDeployTransaction(transactions: IDeployer.TransactionStruct[], overrides?: PayableOverrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): Deployer;
    connect(signer: Signer): Deployer__factory;
    static readonly bytecode = "0x60806040526040516103e53803806103e5833981016040819052610022916101cb565b805160005b81811015610109578281815181106100415761004161033d565b6020026020010151600001516001600160a01b03163b600014156100f7578281815181106100715761007161033d565b6020026020010151602001516001600160a01b03168382815181106100985761009861033d565b6020026020010151604001516040516100b19190610353565b6000604051808303816000865af19150503d80600081146100ee576040519150601f19603f3d011682016040523d82523d6000602084013e6100f3565b606091505b5050505b806101018161036f565b915050610027565b505050610398565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b038111828210171561014957610149610111565b60405290565b604051601f8201601f191681016001600160401b038111828210171561017757610177610111565b604052919050565b80516001600160a01b038116811461019657600080fd5b919050565b60005b838110156101b657818101518382015260200161019e565b838111156101c5576000848401525b50505050565b600060208083850312156101de57600080fd5b82516001600160401b03808211156101f557600080fd5b818501915085601f83011261020957600080fd5b81518181111561021b5761021b610111565b8060051b61022a85820161014f565b918252838101850191858101908984111561024457600080fd5b86860192505b83831015610330578251858111156102625760008081fd5b86016060601f19828d03810182131561027b5760008081fd5b610283610127565b61028e8b850161017f565b8152604061029d81860161017f565b828d01529284015192898411156102b45760008081fd5b83850194508e603f8601126102cb57600093508384fd5b8b8501519350898411156102e1576102e1610111565b6102f18c84601f8701160161014f565b92508383528e8c8d8688010101111561030a5760008081fd5b610319848d850183880161019b565b81019190915284525050918601919086019061024a565b9998505050505050505050565b634e487b7160e01b600052603260045260246000fd5b6000825161036581846020870161019b565b9190910192915050565b600060001982141561039157634e487b7160e01b600052601160045260246000fd5b5060010190565b603f806103a66000396000f3fe6080604052600080fdfea2646970667358221220d3a28fa921e7892332429b9bc53573ee470554691975c14675e6c59dcf2716e664736f6c634300080c0033";
    static readonly abi: {
        inputs: {
            components: {
                internalType: string;
                name: string;
                type: string;
            }[];
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    }[];
    static createInterface(): DeployerInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): Deployer;
}
export {};
//# sourceMappingURL=Deployer__factory.d.ts.map